"""
The csvs can get pretty big. So instead of loading them every time when trying out new figures styles,
this script loads the df once and keeps it in memory. Also has different env configs to run the main script with
"""
import sys
from importlib import reload
from custom_loggers import logger

import post_processing
from get_cves import main, Env


# Severities
s_any = {'severity': 0.0, 'exploitability_score': None}
s_lax = {'severity': 0.0, 'exploitability_score': 'LOW'}
s_high = {'severity': 8.0, 'exploitability_score': 'HIGH'}

# Geo / Org
g_benelux = {'countries': ['The Netherlands', 'Belgium']}
g_iberia = {'countries': ['Portugal', 'Spain']}
g_surf = {'countries': ['The Netherlands', 'Belgium'], 'organisations': ['SURF B.V.']}

# Defaults
default = {'routers_only': True, 'explain_query': False, 'input_tags': '../../bgp-tools/csvs', 'router_identifier': 'ENGINEID'}

cached_df = None

if __name__ == '__main__':
    while True:
        if cached_df is None:
            severity_filter = s_high
            region_filter = g_benelux
            env = Env(**default, **severity_filter, **region_filter)
            main(env)
            cached_df = post_processing.load_dataframe()
        post_processing.create_figures(cached_df)
        logger.info('Finished running post processing script. Press enter to re-run. Press CTRL-C to exit.')
        sys.stdin.read(1)
        logger.info('Re-running post processing script.')
        reload(post_processing)
